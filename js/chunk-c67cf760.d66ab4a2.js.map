{"version":3,"sources":["webpack:///./src/composables/editpage.js","webpack:///./src/pages/clientes/edit.vue","webpack:///./src/pages/clientes/edit.vue?bfda"],"names":["useEditPage","props","formData","v$","onFormSubmited","app","useApp","store","useStore","state","reactive","id","loading","pageReady","submitted","saving","errorMsg","apiUrl","computed","apiPath","encodeURIComponent","currentRecord","get","getters","pageName","set","value","commit","normalizedFormData","payload","Array","isArray","forEach","obj","Object","keys","key","toString","submitForm","isFormValid","$invalid","flashMsg","formValidationError","formValidationMsg","url","data","dispatch","response","closeDialogs","showPageRequestError","load","item","assign","console","error","getErrorClass","field","getFieldError","fieldErrors","$silentErrors","length","$message","isFieldValid","index","undefined","$each","$response","$errors","computedProps","methods","type","default","routeName","pagePath","submitButtonLabel","msgAfterUpdate","showHeader","showSubmitButton","redirect","isSubPage","setup","formDefaultValues","name","phone","pageData","navigateTo","rules","useVuelidate","page","toRefs","onMounted","pageTitle","setPageTitle","ref","tag","onSubmit","class","modelValue","modelModifiers","trim","label","placeholder","icon","style","__exports__"],"mappings":"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","file":"js/chunk-c67cf760.d66ab4a2.js","sourcesContent":["\r\nimport { reactive, computed } from \"vue\";\r\nimport { utils } from \"../utils\";\r\nimport { useApp } from \"./app\";\r\nimport { useStore } from 'vuex';\r\n\r\n\r\nexport function useEditPage(props, formData, v$, onFormSubmited) {\r\n\r\n\tconst app = useApp();\r\n\tconst store = useStore();\r\n\tconst state = reactive({\r\n\t\tid: null,\r\n\t\tloading:false,\r\n\t\tpageReady:false,\r\n\t\tsubmitted: false,\r\n\t\tsaving: false,\r\n\t\terrorMsg: ''\r\n\t});\r\n\r\n\tconst apiUrl = computed(() => {\r\n\t\tif(props.id){\r\n\t\t\treturn props.apiPath + '/' + encodeURIComponent(props.id);\r\n\t\t}\r\n\t\treturn props.apiPath;\r\n\t});\r\n\r\n\tconst currentRecord = computed( {\r\n\t\tget: function () {\r\n\t\t\treturn store.getters[`${props.pageName}/currentRecord`];\r\n\t\t},\r\n\t\tset: function (value) {\r\n\t\t\tstore.commit(`${props.pageName}/setCurrentRecord`, value);\r\n\t\t},\r\n\t});\r\n\r\n\tfunction normalizedFormData(){\r\n\t\tconst payload = {...formData};\r\n\t\tif(Array.isArray(payload)){\r\n\t\t\tpayload.forEach(function(obj){\r\n\t\t\t\tObject.keys(obj).forEach(function(key){\r\n\t\t\t\t\tif(Array.isArray(obj[key])){\r\n\t\t\t\t\t\tobj[key] = obj[key].toString()\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\telse{\r\n\t\t\tObject.keys(payload).forEach(function(key){\r\n\t\t\t\tif(Array.isArray(payload[key])){\r\n\t\t\t\t\tpayload[key] = payload[key].toString()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn payload;\r\n\t}\r\n\r\n\tasync function submitForm(){\r\n\t\tstate.submitted = true;\r\n\t\tconst isFormValid = !v$.value.$invalid;\r\n\t\tif(!isFormValid){\r\n\t\t\tapp.flashMsg(props.formValidationError, props.formValidationMsg, \"error\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tstate.saving = true;\r\n\t\tlet url = apiUrl.value;\r\n\t\tlet id = props.id;\r\n\t\tconst payload = normalizedFormData();\r\n\t\tlet data = { id,  url, payload }\r\n\t\ttry{\r\n\t\t\tlet response = await store.dispatch(`${props.pageName}/updateRecord`, data);\r\n\t\t\tapp.closeDialogs();// close page dialog that if opened\r\n\t\t\tonFormSubmited(response);\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\tapp.showPageRequestError(err);\r\n\t\t}\r\n\t\tfinally{\r\n\t\t\tstate.saving = false;\r\n\t\t\tstate.submitted = false;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function load() {\r\n\t\tstate.pageReady = false;\r\n\t\tstate.loading = true;\r\n\t\tstate.item = null;\r\n\t\tlet url = apiUrl.value;\r\n\t\ttry{\r\n\t\t\tawait store.dispatch(`${props.pageName}/fetchRecord`, url);\r\n\t\t\tObject.assign(formData, currentRecord.value); //update form data\r\n\t\t\tstate.pageReady = true;\r\n\t\t}\r\n\t\tcatch(err){\r\n\t\t\tconsole.error(err);\r\n\t\t\tapp.showPageRequestError(err);\r\n\t\t}\r\n\t\tfinally{\r\n\t\t\tstate.loading = false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getErrorClass(field){\r\n\t\treturn {\"p-invalid\": v$.value[field].$invalid && state.submitted};\r\n\t}\r\n\r\n\tfunction getFieldError(field){\r\n\t\tconst fieldErrors = v$.value[field].$silentErrors;\r\n\t\tif(fieldErrors.length){\r\n\t\t\treturn fieldErrors[0].$message; //return the first error\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction isFieldValid(field, index){\r\n\t\tif(index===undefined){\r\n\t\t\treturn v$.value[field].$invalid && state.submitted;\t\r\n\t\t}\r\n\t\telse if(v$.value.$each.$response.$errors[index][field].length && state.submitted){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst computedProps = {\r\n\t\tapiUrl,\r\n\t\tcurrentRecord\r\n\t}\r\n\r\n\tconst methods = {\r\n\t\tload,\r\n\t\tsubmitForm,\r\n\t\tgetFieldError,\r\n\t\tgetErrorClass,\r\n\t\tisFieldValid\r\n\t}\r\n\t\r\n\treturn {\r\n\t\tstate,\r\n\t\tcomputedProps,\r\n\t\tmethods\r\n\t}\r\n}","<template>\r\n    <div class=\"main-page\">\r\n        <template v-if=\"showHeader\">\r\n            <section class=\"page-section mb-3\" >\r\n                <div class=\"container\">\r\n                    <div class=\"grid justify-content-between\">\r\n                        <div class=\"col \" >\r\n                            <div class=\"\">\r\n                                <div class=\" text-2xl text-primary font-bold\" >\r\n                                    Editar\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </template>\r\n        <section class=\"page-section \" >\r\n            <div class=\"container\">\r\n                <div class=\"grid \">\r\n                    <div class=\"md:col-9 sm:col-12 comp-grid\" >\r\n                        <div class=\"\">\r\n                            <div class=\"\">\r\n                                <div >\r\n                                    <template v-if=\"pageReady\">\r\n                                        <div class=\"grid\">\r\n                                            <div class=\"col-12\">\r\n                                                <form ref=\"observer\"  tag=\"form\" @submit.prevent=\"submitForm()\" class=\"\" :class=\"{ 'card': !isSubPage }\">\r\n                                                    <!--[form-content-start]-->\r\n                                                    <div class=\"grid\">\r\n                                                        <div class=\"col-12\">\r\n                                                            <div class=\"formgrid grid\">\r\n                                                                <div class=\"col-12 md:col-3\">\r\n                                                                    Name \r\n                                                                </div>\r\n                                                                <div class=\"col-12 md:col-9\">\r\n                                                                    <InputText ref=\"ctrlname\" v-model.trim=\"formData.name\"  label=\"Name\" type=\"text\" placeholder=\"Escribir Name\"      \r\n                                                                    class=\" w-full\" :class=\"getErrorClass('name')\">\r\n                                                                    </InputText>\r\n                                                                    <small v-if=\"isFieldValid('name')\" class=\"p-error\">{{ getFieldError('name') }}</small> \r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-12\">\r\n                                                            <div class=\"formgrid grid\">\r\n                                                                <div class=\"col-12 md:col-3\">\r\n                                                                    Phone \r\n                                                                </div>\r\n                                                                <div class=\"col-12 md:col-9\">\r\n                                                                    <InputText ref=\"ctrlphone\" v-model.trim=\"formData.phone\"  label=\"Phone\" type=\"text\" placeholder=\"Escribir Phone\"      \r\n                                                                    class=\" w-full\" :class=\"getErrorClass('phone')\">\r\n                                                                    </InputText>\r\n                                                                    <small v-if=\"isFieldValid('phone')\" class=\"p-error\">{{ getFieldError('phone') }}</small> \r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <!--[form-content-end]-->\r\n                                                    <div v-if=\"showSubmitButton\" class=\"text-center my-3\">\r\n                                                        <Button type=\"submit\" label=\"Actualizar\" icon=\"pi pi-send\" :loading=\"saving\" />\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </template>\r\n                                    <template v-if=\"loading\">\r\n                                        <div class=\"p-3 text-center\">\r\n                                            <ProgressSpinner style=\"width:50px;height:50px\" />\r\n                                        </div>\r\n                                    </template>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\timport {  computed,  reactive, toRefs, onMounted } from 'vue';\r\n\timport useVuelidate from '@vuelidate/core';\r\n\timport { required } from '@/services/validators';\r\n\timport { useApp } from '@/composables/app.js';\r\n\timport { useEditPage } from '@/composables/editpage.js';\r\n\tconst props = defineProps({\r\n\t\tid: [String, Number],\r\n\t\tpageName: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'clientes',\r\n\t\t},\r\n\t\trouteName: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'clientesedit',\r\n\t\t},\r\n\t\tpagePath: {\r\n\t\t\ttype : String,\r\n\t\t\tdefault : 'clientes/edit',\r\n\t\t},\r\n\t\tapiPath: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'clientes/edit',\r\n\t\t},\r\n\t\tsubmitButtonLabel: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"Actualizar\",\r\n\t\t},\r\n\t\tformValidationError: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"El formulario no es válido\",\r\n\t\t},\r\n\t\tformValidationMsg: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"Por favor complete el formulario\",\r\n\t\t},\r\n\t\tmsgAfterUpdate: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"Registro actualizado con éxito\",\r\n\t\t},\r\n\t\tshowHeader: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\tshowSubmitButton: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\tredirect: {\r\n\t\t\ttype : Boolean,\r\n\t\t\tdefault : true,\r\n\t\t},\r\n\t\tisSubPage: {\r\n\t\t\ttype : Boolean,\r\n\t\t\tdefault : false,\r\n\t\t},\r\n\t});\r\n\tconst app = useApp();\r\n\tconst formDefaultValues = Object.assign({\r\n\t\tname: \"\", \r\n\t\tphone: \"\", \r\n\t}, props.pageData);\r\n\tconst formData = reactive({ ...formDefaultValues });\r\n\tfunction onFormSubmited(response) {\r\n\t\tapp.flashMsg(props.msgAfterUpdate);\r\n\t\tif(props.redirect) app.navigateTo(`/clientes`);\r\n\t}\r\n\tconst rules = computed(() => {\r\n\t\treturn {\r\n\t\t\tname: {  },\r\n\t\t\tphone: {  }\r\n\t\t}\r\n\t});\r\n\tconst v$ = useVuelidate(rules, formData); //form validation\r\n\tconst page = useEditPage(props, formData, v$, onFormSubmited);\r\n\t//page state\r\n\tconst {\r\n\t\tsubmitted, // form api submitted state - Boolean\r\n\t\tsaving, // form api submiting state - Boolean\r\n\t\tloading, // form data loading state - Boolean\r\n\t\tpageReady, // if api data loaded successfully\r\n\t} = toRefs(page.state);\r\n\t//page computed propties\r\n\tconst {\r\n\t\tapiUrl, // page current api path\r\n\t\tcurrentRecord, // current page record  - Object\r\n\t} = page.computedProps\r\n\t//page methods\r\n\tconst { \r\n\t\tload, // get editable form data from api\r\n\t\tsubmitForm, // submit form data to api\r\n\t\tgetErrorClass, // return error class if field is invalid- args(fieldname)\r\n\t\tgetFieldError, //  get validation error message - args(fieldname)\r\n\t\tisFieldValid, // check if field is validated - args(fieldname)\r\n\t\t // map api datasource  to Select options label-value\r\n\t} = page.methods;\r\n\tonMounted(()=>{\r\n\t\tconst pageTitle = \"Editar\";\r\n\t\tapp.setPageTitle(props.routeName, pageTitle); // set browser page title\r\n\t\tload();\r\n\t});\r\n</script>\r\n<style scoped>\r\n</style>\r\n","import script from \"./edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}