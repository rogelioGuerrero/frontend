{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./src/pages/registro/list.vue","webpack:///./src/pages/registro/list.vue?8f8d","webpack:///./src/composables/listpage.js","webpack:///./node_modules/core-js/modules/es.array.includes.js"],"names":["$","uncurryThis","notARegExp","requireObjectCoercible","toString","correctIsRegExpLogic","stringIndexOf","indexOf","target","proto","forced","includes","searchString","this","arguments","length","undefined","props","primaryKey","type","default","pageName","routeName","apiPath","paginate","showHeader","showFooter","showBreadcrumbs","exportButton","importButton","multiCheckbox","emptyRecordMsg","titleBeforeDelete","msgBeforeDelete","msgAfterDelete","page","limit","mergeRecords","search","fieldName","fieldValue","sortBy","sortType","isSubPage","filterTagClass","setup","app","useApp","filters","reactive","useListPage","toRefs","state","totalRecords","loading","recordCount","selectedItems","pagination","searchText","pageReady","computedProps","records","pageBreadCrumb","apiUrl","currentRecord","totalPages","canLoadMore","finishedLoading","recordsPosition","methods","load","clearSearch","reload","loadNextPage","loadPreviousPage","exportPage","debounce","onSort","deleteItem","setCurrentRecord","isCurrentRecord","removeFilter","getFilterLabel","filterHasValue","importComplete","getActionMenuModel","data","label","to","id","icon","command","event","openPageDialog","url","closeBtn","onMounted","pageTitle","setPageTitle","onClick","class","outlined","dense","placeholder","value","onInput","key","removable","onRemove","_","home","model","lazy","selection","dataKey","showGridlines","rowHover","responsiveLayout","selectionMode","headerStyle","field","header","body","headerClass","style","title","first","onPage","_unref","rows","start","end","__exports__","route","useRoute","store","useStore","confirm","useConfirm","singleSelect","descending","deleting","errorMsg","computed","get","getters","set","commit","path","encodeURIComponent","query","sortby","toLowerCase","sorttype","orderType","orderby","ordertype","Object","entries","filter","valueType","min","max","fromDate","utils","formatDate","toDate","from","map","val","queryParams","serializeQuery","position","Math","abs","ceil","items","filterName","tag","push","filterValue","resetPagination","sortField","sortOrder","scrollToTop","name","window","scrollTo","top","behavior","payload","merge","dispatch","response","total_records","record_count","rowsNumber","showPageRequestError","record","row","message","flashMsg","exportPageRecords","exportFormats","Array","isArray","prompt","require","accept","reject","selectedVal","idx","splice","minDate","humanDate","maxDate","options","selectedFilter","find","obj","watchEffect","watch","$includes","addToUnscopables","el"],"mappings":"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","file":"js/chunk-5e10f361.6e1e767f.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\nvar stringIndexOf = uncurryThis(''.indexOf);\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~stringIndexOf(\n      toString(requireObjectCoercible(this)),\n      toString(notARegExp(searchString)),\n      arguments.length > 1 ? arguments[1] : undefined\n    );\n  }\n});\n","<template>\r\n    <div class=\"main-page\">\r\n        <template v-if=\"showHeader\">\r\n            <section class=\"page-section mb-3\" >\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"grid justify-content-between\">\r\n                        <div class=\"col \" >\r\n                            <div class=\"\">\r\n                                <div class=\" text-2xl text-primary font-bold\" >\r\n                                    Registro\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 md:col-3 lg:col-2 \" >\r\n                            <div class=\"\">\r\n                                <Button label=\"Agregar nuevo\" icon=\"pi pi-plus\"  @click=\"app.openPageDialog({ page: 'registro/add', url: `/registro/add` , closeBtn: true })\"  class=\"w-full bg-primary \"  />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 md:col-5 lg:col-4 \" >\r\n                            <div class=\"\">\r\n                                <span class=\"p-input-icon-left w-full\">\r\n                                <i class=\"pi pi-search\" />\r\n                                <InputText outlined dense  placeholder=\"Buscar\" class=\"w-full\" :value=\"searchText\" @input=\"debounce(() => { searchText = $event.target.value })\"  />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </template>\r\n        <section class=\"page-section \" >\r\n            <div class=\"container-fluid\">\r\n                <div class=\"grid \">\r\n                    <div class=\"col comp-grid\" >\r\n                        <div class=\"\">\r\n                            <div class=\"flex align-items-center justify-content-around\">\r\n                                <div v-if=\"searchText\" :class=\"filterTagClass\">\r\n                                    Buscar\r\n                                    <Chip class=\"font-medium px-2 py-1\" removable @remove=\"clearSearch()\">{{ searchText }}</Chip>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"\">\r\n                                <div >\r\n                                    <template v-if=\"showBreadcrumbs && $route.query.tag\">\r\n                                        <Breadcrumb :home=\"{icon: 'pi pi-home', to: '/registro'}\" :model=\"pageBreadCrumb\" />\r\n                                    </template>\r\n                                    <div class=\"grid justify-content-start\">\r\n                                        <!-- Master Page Start -->\r\n                                        <div class=\"col-12\">\r\n                                            <div class=\"\" :class=\"{ 'card': !isSubPage }\">\r\n                                                <!-- page records template -->\r\n                                                <div class=\"page-records\" >\r\n                                                    <DataTable :lazy=\"true\" :loading=\"loading\"    v-model:selection=\"selectedItems\"\r\n                                                         :value=\"records\" dataKey=\"id\" @sort=\"onSort($event)\" class=\"\" :showGridlines=\"false\" :rowHover=\"true\" responsiveLayout=\"stack\">\r\n                                                        <Column selectionMode=\"multiple\" headerStyle=\"width: 3em\"></Column>\r\n                                                        <Column  field=\"id\" header=\"Id\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                <router-link :to=\"`/registro/view/${data.id}`\">\r\n                                                                    {{ data.id }}\r\n                                                                </router-link>\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"id_cabecera\" header=\"Id Cabecera\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.id_cabecera }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"dimension\" header=\"Dimension\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.dimension }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"subdimension\" header=\"Subdimension\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.subdimension }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"componente\" header=\"Componente\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.componente }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"item\" header=\"Item\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.item }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"medicion\" header=\"Medicion\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.medicion }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"base\" header=\"Base\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.base }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"status\" header=\"Status\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.status }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"valor\" header=\"Valor\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.valor }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"porcentaje\" header=\"Porcentaje\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.porcentaje }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"comen\" header=\"Comen\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.comen }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"link_evidencias\" header=\"Link Evidencias\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.link_evidencias }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"criterios\" header=\"Criterios\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.criterios }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"orden_dim\" header=\"Orden Dim\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.orden_dim }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"orden_subdim\" header=\"Orden Subdim\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.orden_subdim }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"subcriterios\" header=\"Subcriterios\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.subcriterios }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  headerStyle=\"width: 3em\" headerClass=\"text-center\">\r\n                                                            <template #body=\"{data}\">\r\n                                                                <SplitButton class=\"p-button p-button-raised p-button-text p-button-sm\" :model=\"getActionMenuModel(data)\">\r\n                                                                    <i></i>\r\n                                                                </SplitButton>\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                    </DataTable>\r\n                                                </div>\r\n                                                <!-- page loading indicator -->\r\n                                                <template v-if=\"loading\">\r\n                                                    <div class=\"flex align-items-center justify-content-center text-gray-500 p-3\">\r\n                                                        <div><ProgressSpinner style=\"width:30px;height:30px;\" /> </div>\r\n                                                        <div>Cargando...</div>\r\n                                                    </div>\r\n                                                </template>\r\n                                                <!-- end of page loading indicator-->\r\n                                                <!-- Empty record -->\r\n                                                <template v-if=\"pageReady && !records.length\">\r\n                                                    <div class=\"p-3 my-3 text-500 text-lg font-medium text-center\">\r\n                                                        ningún record fue encontrado\r\n                                                    </div>\r\n                                                </template>\r\n                                                <!-- end of empty record-->\r\n                                                <!-- pagination component-->\r\n                                                <template v-if=\"showFooter\">\r\n                                                    <div class=\"\">\r\n                                                        <div v-show=\"pageReady\">\r\n                                                            <div class=\"flex justify-content-between\">\r\n                                                                <div class=\"flex justify-content-center flex-grow-0\">\r\n                                                                    <div v-if=\"selectedItems.length\" class=\"m-2\">\r\n                                                                        <Button @click=\"deleteItem(selectedItems)\" icon=\"pi pi-trash\" class=\"p-button-danger\" title=\"Eliminar seleccionado\" />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div v-if=\"paginate && totalPages > 1\" class=\"flex-grow-1\">\r\n                                                                    <Paginator class=\"border-none bg-transparent py-3\" :first=\"recordsPosition\" @page=\"(event)=>{pagination.page = event.page + 1}\" :rows=\"pagination.limit\" :totalRecords=\"totalRecords\">\r\n                                                                        <template #start>\r\n                                                                            <span class=\"text-sm text-gray-500 px-2\">\r\n                                                                            Archivos <b>{{ recordsPosition }} de {{ totalRecords }}</b>\r\n                                                                            </span>\r\n                                                                        </template>\r\n                                                                        <template #end>\r\n                                                                        </template>\r\n                                                                    </Paginator>\r\n                                                                </div>\r\n                                                            </div>  \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </template>\r\n                                                <!-- end of pagination component-->\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\timport {   reactive, toRefs, onMounted } from 'vue';\r\n\timport { useApp } from '@/composables/app.js';\r\n\timport { useListPage } from '@/composables/listpage.js';\r\n\tconst props = defineProps({\r\n\t\tprimaryKey : {\r\n\t\t\ttype : String,\r\n\t\t\tdefault : 'id',\r\n\t\t},\r\n\t\tpageName : {\r\n\t\t\ttype : String,\r\n\t\t\tdefault : 'registro',\r\n\t\t},\r\n\t\trouteName : {\r\n\t\t\ttype : String,\r\n\t\t\tdefault : 'registrolist',\r\n\t\t},\r\n\t\tapiPath : {\r\n\t\t\ttype : String,\r\n\t\t\tdefault : 'registro/index',\r\n\t\t},\r\n\t\tpaginate: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\tshowHeader: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\tshowFooter: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\tshowBreadcrumbs: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\texportButton: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\timportButton: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false,\r\n\t\t},\r\n\t\tmultiCheckbox: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\temptyRecordMsg: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"ningún record fue encontrado\",\r\n\t\t},\r\n\t\ttitleBeforeDelete: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"Eliminar el registro\",\r\n\t\t},\r\n\t\tmsgBeforeDelete: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"¿Seguro que quieres borrar este registro?\",\r\n\t\t},\r\n\t\tmsgAfterDelete: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"Grabar eliminado con éxito\",\r\n\t\t},\r\n\t\tpage: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 1,\r\n\t\t},\r\n\t\tlimit: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 10,\r\n\t\t},\r\n\t\tmergeRecords: { // for infinite loading\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false,\r\n\t\t},\r\n\t\tsearch: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: '',\r\n\t\t},\r\n\t\tfieldName: null,\r\n\t\tfieldValue: null,\r\n\t\tsortBy: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: '',\r\n\t\t},\r\n\t\tsortType: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: '', //desc or asc\r\n\t\t},\r\n\t\tisSubPage: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false,\r\n\t\t},\r\n\t\tfilterTagClass: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'surface-card p-2 text-500 flex-grow-1 text-center m-1 mb-3 flex-grow-1 text-center',\r\n\t\t}\r\n\t});\r\n\tconst app = useApp();\r\n\tconst filters = reactive({\r\n\t});\r\n\t//init list page hook\r\n\tconst page = useListPage(props, filters);\r\n\t//page state\r\n\tconst { \r\n\t\ttotalRecords, // total records from api - Number\r\n\t\trecordCount, // current record count - Number\r\n\t\tloading, // Api loading state - Boolean\r\n\t\tselectedItems, // Data table selected items -Array\r\n\t\tpagination, //Pagination object - Object\r\n\t\tsearchText, // search text - String\r\n\t\tpageReady, // api data loaded successfully\r\n\t} = toRefs(page.state);\r\n\t//page computed propties\r\n\tconst { \r\n\t\trecords, // page record from store - Array\r\n\t\tapiUrl, // current api path - URL\r\n\t\tcurrentRecord, // master detail selected record - Object\r\n\t\tpageBreadCrumb, // get page navigation paths - Object\r\n\t\tcanLoadMore, // if api has more data for loading - Boolean\r\n\t\tfinishedLoading, // if api has finished loading - Boolean\r\n\t\ttotalPages, // total number of pages from api - Number\r\n\t\trecordsPosition // current record position from api - Number\r\n\t} = page.computedProps\r\n\t//page methods\r\n\tconst {\r\n\t\tload, // load data from api\r\n\t\treload, // reset pagination and load data\r\n\t\tloadNextPage, // load next page\r\n\t\tloadPreviousPage, // load previous page\r\n\t\texportPage, // export page records - args = (exportFormats, apiUrl, pageName)\r\n\t\tclearSearch, // clear input search\r\n\t\tdebounce, // debounce input search\r\n\t\tonSort, // reset page number before sort from api\r\n\t\tdeleteItem, // delete item by id or selected items - args = (id) or (selectedItems)\r\n\t\tsetCurrentRecord, // master detail set current record\r\n\t\tisCurrentRecord, // master detail \r\n\t\tremoveFilter, // remove page filter item - args = (filter.propertyname)\r\n\t\tgetFilterLabel, // get filter item display label - args = (filter.propertyname)\r\n\t\tfilterHasValue, //check if filter item has value - args = (filter.propertyname)\r\n\t\timportComplete // reload page after data import\r\n\t} = page.methods\r\n\tfunction getActionMenuModel(data){\r\n\t\treturn [\r\n\t\t{\r\n\t\t\tlabel: \"View\",\r\n\t\t\tto: `/registro/view/${data.id}`,\r\n\t\t\ticon: \"pi pi-eye\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Edit\",\r\n\t\t\tcommand: (event) => { app.openPageDialog({ page:'registro/edit', url: `/registro/edit/${data.id}` , closeBtn: true }) },\r\n\t\t\ticon: \"pi pi-pencil\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Delete\",\r\n\t\t\tcommand: (event) => { deleteItem(data.id) },\r\n\t\t\ticon: \"pi pi-minus-circle\"\r\n\t\t}\r\n\t]\r\n\t}\r\n\tonMounted(()=>{ \r\n\t\tconst pageTitle = \"Registro\";\r\n\t\tapp.setPageTitle(props.routeName, pageTitle);\r\n\t\tload();\r\n\t});\r\n</script>\r\n<style scoped>\r\n</style>\r\n","import script from \"./list.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./list.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { reactive, computed, onMounted, watch, watchEffect  } from \"vue\";\r\nimport { utils } from '@/utils';\r\nimport { useApp } from '@/composables/app';\r\nimport { useStore } from 'vuex';\r\nimport { useRoute } from 'vue-router';\r\nimport { useConfirm } from 'primevue/useconfirm';\r\n\r\nexport function useListPage(props, filters) {\r\n\tconst app = useApp();\r\n\tconst route = useRoute();\r\n\tconst store = useStore();\r\n\tconst confirm = useConfirm();\r\n\tconst state = reactive({\r\n\t\ttotalRecords: 0,\r\n\t\trecordCount: 0,\r\n\t\tpageReady: false,\r\n\t\tloading: false,\r\n\t\tsingleSelect: false,\r\n\t\tselectedItems: [],\r\n\t\tpagination: {\r\n\t\t\tpage: 1,\r\n\t\t\tlimit: props.limit,\r\n\t\t\tsortBy: '',\r\n\t\t\tdescending: true,\r\n\t\t},\r\n\t\tdeleting: false,\r\n\t\tsearchText: '',\r\n\t\terrorMsg: ''\r\n\t});\r\n\r\n\tlet records = computed({\r\n\t\tget() {\r\n\t\t\treturn store.getters[`${props.pageName}/records`];\r\n\t\t},\r\n\t\tset(value) {\r\n\t\t\tstore.commit(`${props.pageName}/setRecords`, value);\r\n\t\t},\r\n\t});\r\n\r\n\tlet currentRecord = computed ({\r\n\t\tget() {\r\n\t\t\treturn store.getters[`${props.pageName}/currentRecord`];\r\n\t\t},\r\n\t\tset(value) {\r\n\t\t\tstore.commit(`${props.pageName}/setCurrentRecord`, value);\r\n\t\t}\r\n\t});\r\n\r\n\tconst apiUrl = computed(() => {\r\n\t\tlet path = props.apiPath;\r\n\t\tif (props.fieldName) {\r\n\t\t\tpath = path + '/' + encodeURIComponent(props.fieldName) + '/' + encodeURIComponent(props.fieldValue);\r\n\t\t}\r\n\t\tif (props.sortBy) {\r\n\t\t\tstate.pagination.sortBy = props.sortBy;\r\n\t\t}\r\n\t\telse if (route.query.sortby) {\r\n\t\t\tstate.pagination.sortBy = route.query.sortby;\r\n\t\t}\r\n\r\n\t\tif (props.sortType) {\r\n\t\t\tstate.pagination.descending = props.sortType.toLowerCase() == 'desc';\r\n\t\t}\r\n\t\telse if (route.query.sorttype) {\r\n\t\t\tstate.pagination.descending = (route.query.sorttype.toLowerCase() == 'desc');\r\n\t\t}\r\n\r\n\t\tconst query = {};\r\n\t\tquery.page = state.pagination.page;\r\n\t\tquery.limit = state.pagination.limit;\r\n\t\t\r\n\t\tif(state.pagination.sortBy){\r\n\t\t\tlet orderType = state.pagination.descending ? 'desc' : 'asc';\r\n\t\t\tquery.orderby = state.pagination.sortBy;\r\n\t\t\tquery.ordertype = orderType;\r\n\t\t}\r\n\t\t\r\n\t\tif (state.searchText) {\r\n\t\t\tquery.search = state.searchText;\r\n\t\t}\r\n\r\n\t\tfor (const [key, filter] of Object.entries(filters)) {\r\n\t\t\tif(filterHasValue(filter)){\r\n\t\t\t\tif(filter.valueType == 'range'){\r\n\t\t\t\t\tquery[key] = { min: filter.value[0], max: filter.value[1] };\r\n\t\t\t\t}\r\n\t\t\t\telse if(filter.valueType == 'range-date'){\r\n\t\t\t\t\tlet fromDate = utils.formatDate(filter.value[0]);\r\n\t\t\t\t\tlet toDate = utils.formatDate(filter.value[1]);\r\n\t\t\t\t\tquery[key] = { from: fromDate, to: toDate };\r\n\t\t\t\t}\r\n\t\t\t\telse if(filter.valueType == 'multiple-date'){\r\n\t\t\t\t\tquery[key] = filter.value.map((val) => utils.formatDate(val));\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tquery[key] = filter.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst queryParams = utils.serializeQuery(query);\r\n\t\tif(path.includes('?')){\r\n            return `${path}&${queryParams}`;\r\n        }\r\n\t\treturn `${path}?${queryParams}`;\r\n\t});\r\n\r\n\tconst recordsPosition = computed(() => {\r\n\t\tconst position = Math.min(state.pagination.page * state.pagination.limit, state.totalRecords) - 1;\r\n\t\treturn Math.abs(position);\r\n\t});\r\n\r\n\tconst totalPages = computed (() => {\r\n\t\tif (state.totalRecords > state.pagination.limit) {\r\n\t\t\treturn Math.ceil(state.totalRecords / state.pagination.limit);\r\n\t\t}\r\n\t\treturn 1;\r\n\t});\r\n\r\n\tconst finishedLoading = computed(() => {\r\n\t\tif (records.value.length > state.pagination.limit && records.value.length >= state.totalRecords) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t});\r\n\r\n\tconst canLoadMore = computed(() => {\r\n\t\tif (state.loading || finishedLoading.value) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t});\r\n\r\n\tconst pageBreadCrumb = computed(() => {\r\n\t\tlet items = [];\r\n\t\tlet filterName = route.query.tag || props.fieldName;\r\n\t\titems.push({\r\n\t\t\tlabel: filterName,\r\n\t\t\tto: `/${props.pageName}`\r\n\t\t});\r\n\r\n\t\tlet filterValue = route.query.label || props.fieldValue;\r\n\t\titems.push({\r\n\t\t\tlabel: filterValue,\r\n\t\t\tto: `/${props.pageName}`\r\n\t\t});\r\n\t\treturn items;\r\n\t});\r\n\t\r\n\tfunction resetPagination(){\r\n\t\trecords.value = [];\r\n\t\tstate.recordCount = 0;\r\n\t\tstate.pagination.page = 1;\r\n\t}\r\n\r\n\tfunction onSort(event) {\r\n\t\tif(props.mergeRecords){\r\n\t\t\tresetPagination();\r\n\t\t}\r\n\t\tstate.pagination.sortBy = event.sortField;\r\n\t\tstate.pagination.descending = event.sortOrder==-1;\r\n\t}\r\n\r\n\tfunction loadNextPage() {\r\n\t\tstate.pagination.page++; //will trigger load function\r\n\t}\r\n\r\n\tfunction loadPreviousPage() {\r\n\t\tif(state.pagination.page > 0){\r\n\t\t\tstate.pagination.page--; //will trigger load function\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollToTop(){\r\n\t\t// display starting from first record\r\n\t\t// if not infinite load,\r\n\t\tif(props.routeName === route.name && !props.mergeRecords){ \r\n\t\t\twindow.scrollTo({top: 0, behavior: \"smooth\"});\r\n\t\t}\r\n\t}\r\n\r\n\tasync function load() {\r\n\t\tif (!canLoadMore.value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tscrollToTop();\r\n\t\tstate.pageReady = false;\r\n\t\tstate.loading = true;\r\n\t\tcurrentRecord.value = null;\r\n\t\t\r\n\t\tconst url = apiUrl.value;\r\n\t\tconst payload = {\r\n\t\t\turl,\r\n\t\t\tmerge: props.mergeRecords\r\n\t\t}\r\n\t\ttry{\r\n\t\t\t//the store will load the page data and set current records\r\n\t\t\tconst response = await store.dispatch(`${props.pageName}/fetchRecords`, payload);\r\n\r\n\t\t\t//update pagination state with new response data\r\n\t\t\tstate.totalRecords = response.total_records;\r\n\t\t\tstate.recordCount = response.record_count;\r\n\t\t\tstate.pagination.rowsNumber = state.totalRecords;\r\n\r\n\t\t\t// when page data is loaded\r\n\t\t\t//notify other dependent components\r\n\t\t\tstate.pageReady = true;\r\n\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(err){\r\n\t\t\tapp.showPageRequestError(err);\r\n\t\t}\r\n\t\tfinally{\r\n\t\t\tstate.loading = false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction reload() {\r\n\t\tstate.searchText = route.query.search || null;\r\n\t\tresetPagination();\r\n\t}\r\n\r\n\tfunction setCurrentRecord(record) {\r\n\t\tstate.selectedItems=[record];\r\n\t\tstore.commit(`${props.pageName}/setCurrentRecord`, record);\r\n\t}\r\n\r\n\tfunction isCurrentRecord(row) {\r\n\t\treturn row == currentRecord.value;\r\n\t}\r\n\r\n\tfunction importComplete(message) {\r\n\t\tapp.flashMsg(message);\r\n\t\treload();\r\n\t}\r\n\r\n\tfunction exportPage() {\r\n\t\tapp.exportPageRecords(props.exportFormats, apiUrl.value, props.pageName);\r\n\t}\r\n\r\n\tasync function deleteItem(id) {\r\n\t\tif (Array.isArray(id)) {\r\n\t\t\tid = id.map(value => value[props.primaryKey]);\r\n\t\t}\r\n\r\n\t\tif (id) {\r\n\t\t\tconst title = props.titleBeforeDelete;\r\n\t\t\tconst prompt = props.msgBeforeDelete;\r\n\t\t\tconfirm.require({\r\n\t\t\t\tmessage: prompt,\r\n\t\t\t\theader: title,\r\n\t\t\t\ticon: 'pi pi-exclamation-triangle',\r\n\t\t\t\taccept: async () => {\r\n\t\t\t\t\t//callback to execute when user confirms the action\r\n\t\t\t\t\tlet url =`${props.pageName}/delete/${id.toString()}`;\r\n\t\t\t\t\tlet payload = { id, url };\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tawait store.dispatch(`${props.pageName}/deleteRecord`, payload);\r\n\t\t\t\t\t\tapp.flashMsg(props.msgAfterDelete);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(err){\r\n\t\t\t\t\t\tapp.showPageRequestError(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\treject: () => {\r\n\t\t\t\t\t//callback to execute when user rejects the action\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeFilter(filter, selectedVal){\r\n\t\tlet valueType = filter.valueType;\r\n\t\tif(valueType=='single'){\r\n\t\t\tfilter.value = null;\r\n\t\t}\r\n\t\telse if(valueType == 'range' || valueType == 'range-date'){\r\n\t\t\tfilter.value = [];\r\n\t\t}\r\n\t\telse if(valueType == 'multiple' || valueType == 'multiple-date'){\r\n\t\t\tlet idx = filter.value.indexOf(selectedVal);\r\n\t\t\tfilter.value.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction filterHasValue(filter){\r\n\t\tif(filter.valueType == 'range'){\r\n\t\t\treturn filter.value.length>0;\r\n\t\t}\r\n\t\telse if(filter.valueType == 'range-date'){\r\n\t\t\tconst toDate = filter.value[1] || null; \r\n\t\t\tif(toDate) return true;//if second date is selected\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse if(Array.isArray(filter.value)){\r\n\t\t\treturn filter.value.length>0;\r\n\t\t}\r\n\t\telse if(filter.value){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tfunction getFilterLabel(filter, selectedVal){\r\n\t\tif(filter.valueType == 'range' && filter.value.length){\r\n\t\t\tlet min = filter.value[0];\r\n\t\t\tlet max = filter.value[1];\r\n\t\t\treturn `${min} - ${max}`;\r\n\t\t}\r\n\t\telse if(filter.valueType == 'range-date' && filter.value.length){\r\n\t\t\tlet minDate = utils.humanDate(filter.value[0]);\r\n\t\t\tlet maxDate = utils.humanDate(filter.value[1]);\r\n\t\t\treturn `${minDate} - ${maxDate}`;\r\n\t\t}\r\n\t\telse if(filter.valueType == 'multiple-date'){\r\n\t\t\tlet val = selectedVal || filter.value;\r\n\t\t\treturn utils.humanDate(val);\r\n\t\t}\r\n\t\telse if(filter.valueType == 'single-date'){\r\n\t\t\treturn utils.humanDate(filter.value);\r\n\t\t}\r\n\t\telse if(filter.options.length){\r\n\t\t\tlet val = selectedVal || filter.value;\r\n\t\t\tlet selectedFilter = filter.options.find(obj => obj.value == val);\r\n\t\t\tif(selectedFilter){\r\n\t\t\t\treturn selectedFilter.label;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(selectedVal){\r\n\t\t\treturn selectedVal.toString();\r\n\t\t}\r\n\t\treturn filter.value.toString();\r\n\t}\r\n\t\r\n\tfunction clearSearch() {\r\n\t\tstate.searchText = '';\r\n\t\troute.query.search = '';\r\n\t}\r\n\r\n\tonMounted(()=>{ \r\n\t\tif(route.query.search){\r\n\t\t\tstate.searchText = route.query.search;\r\n\t\t}\r\n\t});\r\n\r\n\twatchEffect(() => {\r\n\t\tif ((props.fieldName && props.fieldValue) || state.searchText) {\r\n\t\t\tresetPagination();\r\n\t\t}\r\n\t});\r\n\r\n\twatch(apiUrl, () => load());\r\n\r\n\tconst computedProps = {\r\n\t\trecords,\r\n\t\tapiUrl,\r\n\t\tcurrentRecord,\r\n\t\tpageBreadCrumb,\r\n\t\tcanLoadMore,\r\n\t\tfinishedLoading,\r\n\t\ttotalPages,\r\n\t\trecordsPosition\r\n\t}\r\n\r\n\tconst methods = {\r\n\t\tload,\r\n\t\treload,\r\n\t\tloadNextPage,\r\n\t\tloadPreviousPage,\r\n\t\tresetPagination,\r\n\t\texportPage,\r\n\t\tclearSearch,\r\n\t\tdebounce: utils.debounce(),\r\n\t\tonSort,\r\n\t\tdeleteItem,\r\n\t\tsetCurrentRecord,\r\n\t\tisCurrentRecord,\r\n\t\tremoveFilter,\r\n\t\tgetFilterLabel,\r\n\t\tfilterHasValue,\r\n\t\timportComplete\r\n\t}\r\n\t\r\n\treturn {\r\n\t\tstate,\r\n\t\tcomputedProps,\r\n\t\tmethods,\r\n\t}\r\n\r\n}","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n"],"sourceRoot":""}