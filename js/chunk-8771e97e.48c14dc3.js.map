{"version":3,"sources":["webpack:///./src/composables/addpage.js","webpack:///./src/pages/pedido/add.vue","webpack:///./src/pages/pedido/add.vue?e20f"],"names":["useAddPage","props","formData","v$","beforeSubmit","afterSubmit","app","useApp","store","useStore","state","reactive","id","pageReady","submitted","saving","errorMsg","setFormDefaultValues","apiUrl","computed","apiPath","validateForm","value","$validate","$invalid","normalizedFormData","Array","isArray","payload","forEach","obj","Object","keys","key","toString","submitForm","undefined","flashMsg","formValidationError","formValidationMsg","url","data","dispatch","pageName","response","closeDialogs","showPageRequestError","storeFormData","getters","pageData","formDefaultValues","assign","getErrorClass","field","index","isInvalid","$each","$response","$errors","length","isFieldValid","getFieldError","fieldErrors","$silentErrors","$message","watch","current","deep","immediate","onMounted","computedProps","methods","type","default","routeName","submitButtonLabel","msgAfterSave","showHeader","showSubmitButton","redirect","isSubPage","setup","cliente","produto","rules","numeric","useVuelidate","page","navigateTo","toRefs","pageTitle","setPageTitle","expose","ref","tag","onSubmit","class","modelValue","modelModifiers","trim","label","placeholder","step","showButtonBar","showTime","dateFormat","hourFormat","showIcon","mask","icon","loading","__exports__"],"mappings":"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","file":"js/chunk-8771e97e.48c14dc3.js","sourcesContent":["import { reactive, computed, onMounted, watch } from \"vue\";\r\n\r\nimport { useApp } from '@/composables/app';\r\nimport { useStore } from 'vuex';\r\n\r\n\r\nexport function useAddPage({props, formData, v$, beforeSubmit, afterSubmit}) {\r\n\tconst app = useApp();\r\n\tconst store = useStore();\r\n\tconst state = reactive({\r\n\t\tid: null,\r\n\t\tpageReady: false,\r\n\t\tsubmitted: false,\r\n\t\tsaving: false,\r\n\t\terrorMsg: ''\r\n\t});\r\n\r\n\tsetFormDefaultValues();\r\n\r\n\tconst apiUrl = computed(() => {\r\n\t\treturn props.apiPath\r\n\t});\r\n\r\n\tfunction validateForm(){\r\n\t\tstate.submitted = true;\r\n\t\tv$.value.$validate();\r\n\t\tif(v$.value.$invalid){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction normalizedFormData(){\r\n\t\tif(Array.isArray(formData)){ // for multi form data\r\n\t\t\tconst payload = [...formData];\r\n\t\t\tpayload.forEach(function(obj){\r\n\t\t\t\tObject.keys(obj).forEach(function(key){\r\n\t\t\t\t\tif(Array.isArray(obj[key])){\r\n\t\t\t\t\t\tobj[key] = obj[key].toString()\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn payload;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst payload = {...formData};\r\n\t\t\tObject.keys(payload).forEach(function(key){\r\n\t\t\t\tif(Array.isArray(payload[key])){\r\n\t\t\t\t\tpayload[key] = payload[key].toString()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn payload;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function submitForm(){\r\n\t\tstate.submitted = true;\r\n\t\tif(beforeSubmit !== undefined){\r\n\t\t\tif(!beforeSubmit()){ return; }\r\n\t\t}\r\n\r\n\t\tif(!validateForm()){\r\n\t\t\tapp.flashMsg(props.formValidationError, props.formValidationMsg, \"error\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tstate.saving = true;\r\n\t\tconst url = apiUrl.value;\r\n\t\tconst payload = normalizedFormData();\r\n\t\tlet data = { url, payload }\r\n\t\ttry{\r\n\t\t\tconst response = await store.dispatch(`${props.pageName}/saveRecord`, data);\r\n\t\t\tapp.closeDialogs();// hide dialog if form is submitted via modal\r\n\t\t\tif(afterSubmit){\r\n\t\t\t\tafterSubmit(response)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\tapp.showPageRequestError(err);\r\n\t\t}\r\n\t\tfinally{\r\n\t\t\tstate.submitted = false;\r\n\t\t\tstate.saving = false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setFormDefaultValues(){\r\n\t\tconst storeFormData = computed (()=> store.getters[`${props.pageName}/formData`]); // from data from store\r\n\t\tconst pageData = props.pageData; // when form default values is passed by component props\r\n\t\tconst formDefaultValues = { ...pageData, ...storeFormData.value };\r\n\t\t\r\n\t\tif(!Array.isArray(formData)){\r\n\t\t\tObject.assign(formData, formDefaultValues); //reset form data\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction getErrorClass(field, index){\r\n\t\tlet isInvalid = false;\r\n\t\tif(index === undefined){\r\n\t\t\tisInvalid = v$.value[field].$invalid && state.submitted;\r\n\t\t}\r\n\t\t//for multi form validation\r\n\t\telse if(v$.value.$each.$response.$errors[index][field].length && state.submitted){\r\n\t\t\tisInvalid = true;\r\n\t\t}\r\n\t\treturn {\"p-invalid\": isInvalid };\r\n\t}\r\n\r\n\tfunction isFieldValid(field, index){\r\n\t\tif(index===undefined){\r\n\t\t\treturn v$.value[field].$invalid && state.submitted;\t\r\n\t\t}\r\n\t\telse if(v$.value.$each.$response.$errors[index][field].length && state.submitted){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\r\n\tfunction getFieldError(field, index){\r\n\t\tlet fieldErrors = null;\r\n\t\tif(index===undefined){\r\n\t\t\tfieldErrors = v$.value[field].$silentErrors;\r\n\t\t\tif(fieldErrors.length){\r\n\t\t\t\treturn fieldErrors[0].$message; //return the first error\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tfieldErrors = v$.value.$each.$response.$errors[index][field];\r\n\t\t\tif(fieldErrors.length){\r\n\t\t\t\treturn fieldErrors[0].$message; //return the first error\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\t\r\n\t\r\n\twatch(() => props.pageData, (current) => {\r\n\t\tObject.assign(formData, current);\r\n\t  },\r\n\t  { deep: true, immediate: true }\r\n  \t);\r\n\r\n\tonMounted(()=>{ \r\n\t\tstate.pageReady = true;\r\n\t});\r\n\r\n\tconst computedProps = {\r\n\t\tapiUrl,\r\n\t}\r\n\r\n\tconst methods = {\r\n\t\tsubmitForm,\r\n\t\tgetErrorClass,\r\n\t\tgetFieldError,\r\n\t\tisFieldValid\r\n\t}\r\n\t\r\n\treturn {\r\n\t\tvalidateForm,\r\n\t\tsetFormDefaultValues,\r\n\t\tformData,\r\n\t\tstate,\r\n\t\tcomputedProps,\r\n\t\tmethods\r\n\t}\r\n\r\n}","<template>\r\n    <div class=\"main-page\">\r\n        <template v-if=\"showHeader\">\r\n            <section class=\"page-section mb-3\" >\r\n                <div class=\"container\">\r\n                    <div class=\"grid justify-content-between\">\r\n                        <div class=\"col \" >\r\n                            <div class=\"\">\r\n                                <div class=\" text-2xl text-primary font-bold\" >\r\n                                    Agregar nuevo\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </template>\r\n        <section class=\"page-section \" >\r\n            <div class=\"container\">\r\n                <div class=\"grid \">\r\n                    <div class=\"md:col-9 sm:col-12 comp-grid\" >\r\n                        <div class=\"\">\r\n                            <div class=\"\">\r\n                                <div >\r\n                                    <form ref=\"observer\" tag=\"form\" @submit.prevent=\"submitForm()\" class=\"\" :class=\"{ 'card': !isSubPage }\">\r\n                                        <div class=\"grid\">\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"formgrid grid\">\r\n                                                    <div class=\"col-12 md:col-3\">\r\n                                                        Cliente \r\n                                                    </div>\r\n                                                    <div class=\"col-12 md:col-9\">\r\n                                                        <InputText ref=\"ctrlcliente\" v-model.trim=\"formData.cliente\"  label=\"Cliente\" type=\"text\" placeholder=\"Escribir Cliente\"      \r\n                                                        class=\" w-full\" :class=\"getErrorClass('cliente')\">\r\n                                                        </InputText>\r\n                                                        <small v-if=\"isFieldValid('cliente')\" class=\"p-error\">{{ getFieldError('cliente') }}</small> \r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"formgrid grid\">\r\n                                                    <div class=\"col-12 md:col-3\">\r\n                                                        Produto \r\n                                                    </div>\r\n                                                    <div class=\"col-12 md:col-9\">\r\n                                                        <InputText ref=\"ctrlproduto\" v-model.trim=\"formData.produto\"  label=\"Produto\" type=\"number\" placeholder=\"Escribir Produto\"   step=\"any\"    \r\n                                                        class=\" w-full\" :class=\"getErrorClass('produto')\">\r\n                                                        </InputText>\r\n                                                        <small v-if=\"isFieldValid('produto')\" class=\"p-error\">{{ getFieldError('produto') }}</small> \r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"formgrid grid\">\r\n                                                    <div class=\"col-12 md:col-3\">\r\n                                                        Data \r\n                                                    </div>\r\n                                                    <div class=\"col-12 md:col-9\">\r\n                                                        <Calendar :showButtonBar=\"true\" :showTime=\"true\" dateFormat=\"yy-mm-dd\" hourFormat=\"24\" v-model=\"formData.data\" :showIcon=\"true\" class=\"w-full\" :class=\"getErrorClass('data')\"     mask=\"yy-MM-DD HH:mm\"     />\r\n                                                        <small v-if=\"isFieldValid('data')\" class=\"p-error\">{{ getFieldError('data') }}</small> \r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div v-if=\"showSubmitButton\" class=\"text-center my-3\">\r\n                                            <Button class=\"p-button-primary\" type=\"submit\" label=\"Entregar\" icon=\"pi pi-send\" :loading=\"saving\" />\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\timport {  computed,  reactive, toRefs, onMounted } from 'vue';\r\n\timport useVuelidate from '@vuelidate/core';\r\n\timport { required, numeric, } from '@/services/validators';\r\n\timport { useApp } from '@/composables/app.js';\r\n\timport { useAddPage } from '@/composables/addpage.js';\r\n\tconst props = defineProps({\r\n\t\tpageName : {\r\n\t\t\ttype : String,\r\n\t\t\tdefault : 'pedido',\r\n\t\t},\r\n\t\trouteName : {\r\n\t\t\ttype : String,\r\n\t\t\tdefault : 'pedidoadd',\r\n\t\t},\r\n\t\tapiPath : {\r\n\t\t\ttype : String,\r\n\t\t\tdefault : 'pedido/add',\r\n\t\t},\r\n\t\tsubmitButtonLabel: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"Entregar\",\r\n\t\t},\r\n\t\tformValidationError: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"El formulario no es válido\",\r\n\t\t},\r\n\t\tformValidationMsg: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"Por favor complete el formulario\",\r\n\t\t},\r\n\t\tmsgAfterSave: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"Grabar agregado exitosamente\",\r\n\t\t},\r\n\t\tshowHeader: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\tshowSubmitButton: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\tredirect: {\r\n\t\t\ttype : Boolean,\r\n\t\t\tdefault : true,\r\n\t\t},\r\n\t\tisSubPage: {\r\n\t\t\ttype : Boolean,\r\n\t\t\tdefault : false,\r\n\t\t},\r\n\t\tpageData: { // use to set formData default values from another page\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => {} \r\n\t\t},\r\n\t});\r\n\tconst app = useApp();\r\n\tconst formDefaultValues = {\r\n\t\tcliente: \"\", \r\n\t\tproduto: \"\", \r\n\t\tdata: \"\", \r\n\t};\r\n\tconst formData = reactive({ ...formDefaultValues });\r\n\t//form validation rules\r\n\tconst rules = computed(() => {\r\n\t\treturn {\r\n\t\t\tcliente: {  },\r\n\t\t\tproduto: { numeric },\r\n\t\t\tdata: {  }\r\n\t\t}\r\n\t});\r\n\tconst v$ = useVuelidate(rules, formData); // form validation\r\n\tconst page = useAddPage({ props, formData, v$, beforeSubmit, afterSubmit });\r\n\t// perform custom validation before submit form\r\n\t// set custom form fields\r\n\t// return false if validation fails\r\n\tfunction beforeSubmit(){\r\n\t\treturn true;\r\n\t}\r\n\t// after form submited to api\r\n\t// reset form data.\r\n\t// redirect to another page\r\n\tfunction afterSubmit(response) {\r\n\t\tapp.flashMsg(props.msgAfterSave);\r\n\t\tpage.setFormDefaultValues(); //reset form data\r\n\t\tif(props.redirect) app.navigateTo(`/pedido`);\r\n\t}\r\n\t//page state\r\n\tconst {\r\n\t\tsubmitted, // form submitted state - Boolean\r\n\t\tsaving, // form api submiting state - Boolean\r\n\t\tpageReady, // if api data loaded successfully\r\n\t} = toRefs(page.state);\r\n\t//page methods\r\n\tconst {\r\n\t\tsubmitForm, //submit form data to api\r\n\t\tgetErrorClass, // return error class if field is invalid- args(fieldname)\r\n\t\tgetFieldError, //  get validation error message - args(fieldname)\r\n\t\tisFieldValid, // check if field is validated - args(fieldname)\r\n\t\t // map api datasource  to Select options label-value\r\n\t} = page.methods;\r\n\tonMounted(()=>{\r\n\t\tconst pageTitle = \"Agregar nuevo\";\r\n\t\tapp.setPageTitle(props.routeName, pageTitle); // set browser page title\r\n\t});\r\n\t// expose page object for other components access\r\n\tdefineExpose({\r\n\t\tpage\r\n\t});\r\n</script>\r\n<style scoped>\r\n</style>\r\n","import script from \"./add.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./add.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}