{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./src/composables/listpage.js","webpack:///./src/pages/datosprueba/list.vue","webpack:///./src/pages/datosprueba/list.vue?0622","webpack:///./node_modules/core-js/modules/es.array.includes.js"],"names":["$","uncurryThis","notARegExp","requireObjectCoercible","toString","correctIsRegExpLogic","stringIndexOf","indexOf","target","proto","forced","includes","searchString","this","arguments","length","undefined","useListPage","props","filters","app","useApp","route","useRoute","store","useStore","confirm","useConfirm","state","reactive","totalRecords","recordCount","pageReady","loading","singleSelect","selectedItems","pagination","page","limit","sortBy","descending","deleting","searchText","errorMsg","records","computed","get","getters","pageName","set","value","commit","currentRecord","apiUrl","path","apiPath","fieldName","encodeURIComponent","fieldValue","query","sortby","sortType","toLowerCase","sorttype","orderType","orderby","ordertype","search","Object","entries","key","filter","filterHasValue","valueType","min","max","fromDate","utils","formatDate","toDate","from","to","map","val","queryParams","serializeQuery","recordsPosition","position","Math","abs","totalPages","ceil","finishedLoading","canLoadMore","pageBreadCrumb","items","filterName","tag","push","label","filterValue","resetPagination","onSort","event","mergeRecords","sortField","sortOrder","loadNextPage","loadPreviousPage","scrollToTop","routeName","name","window","scrollTo","top","behavior","load","url","payload","merge","dispatch","response","total_records","record_count","rowsNumber","showPageRequestError","reload","setCurrentRecord","record","isCurrentRecord","row","importComplete","message","flashMsg","exportPage","exportPageRecords","exportFormats","deleteItem","id","Array","isArray","primaryKey","title","titleBeforeDelete","prompt","msgBeforeDelete","require","header","icon","accept","msgAfterDelete","reject","removeFilter","selectedVal","idx","splice","getFilterLabel","minDate","humanDate","maxDate","options","selectedFilter","find","obj","clearSearch","onMounted","watchEffect","watch","computedProps","methods","debounce","type","default","paginate","showHeader","showFooter","showBreadcrumbs","exportButton","importButton","multiCheckbox","emptyRecordMsg","isSubPage","filterTagClass","setup","toRefs","getActionMenuModel","data","command","openPageDialog","closeBtn","pageTitle","setPageTitle","onClick","class","outlined","dense","placeholder","onInput","removable","onRemove","_","home","model","lazy","selection","dataKey","showGridlines","rowHover","responsiveLayout","selectionMode","headerStyle","field","body","headerClass","style","first","onPage","_unref","rows","start","end","__exports__","$includes","addToUnscopables","el"],"mappings":"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","file":"js/chunk-9b505764.b3f2c8fc.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\nvar stringIndexOf = uncurryThis(''.indexOf);\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~stringIndexOf(\n      toString(requireObjectCoercible(this)),\n      toString(notARegExp(searchString)),\n      arguments.length > 1 ? arguments[1] : undefined\n    );\n  }\n});\n","import { reactive, computed, onMounted, watch, watchEffect  } from \"vue\";\r\nimport { utils } from '@/utils';\r\nimport { useApp } from '@/composables/app';\r\nimport { useStore } from 'vuex';\r\nimport { useRoute } from 'vue-router';\r\nimport { useConfirm } from 'primevue/useconfirm';\r\n\r\nexport function useListPage(props, filters) {\r\n\tconst app = useApp();\r\n\tconst route = useRoute();\r\n\tconst store = useStore();\r\n\tconst confirm = useConfirm();\r\n\tconst state = reactive({\r\n\t\ttotalRecords: 0,\r\n\t\trecordCount: 0,\r\n\t\tpageReady: false,\r\n\t\tloading: false,\r\n\t\tsingleSelect: false,\r\n\t\tselectedItems: [],\r\n\t\tpagination: {\r\n\t\t\tpage: 1,\r\n\t\t\tlimit: props.limit,\r\n\t\t\tsortBy: '',\r\n\t\t\tdescending: true,\r\n\t\t},\r\n\t\tdeleting: false,\r\n\t\tsearchText: '',\r\n\t\terrorMsg: ''\r\n\t});\r\n\r\n\tlet records = computed({\r\n\t\tget() {\r\n\t\t\treturn store.getters[`${props.pageName}/records`];\r\n\t\t},\r\n\t\tset(value) {\r\n\t\t\tstore.commit(`${props.pageName}/setRecords`, value);\r\n\t\t},\r\n\t});\r\n\r\n\tlet currentRecord = computed ({\r\n\t\tget() {\r\n\t\t\treturn store.getters[`${props.pageName}/currentRecord`];\r\n\t\t},\r\n\t\tset(value) {\r\n\t\t\tstore.commit(`${props.pageName}/setCurrentRecord`, value);\r\n\t\t}\r\n\t});\r\n\r\n\tconst apiUrl = computed(() => {\r\n\t\tlet path = props.apiPath;\r\n\t\tif (props.fieldName) {\r\n\t\t\tpath = path + '/' + encodeURIComponent(props.fieldName) + '/' + encodeURIComponent(props.fieldValue);\r\n\t\t}\r\n\t\tif (props.sortBy) {\r\n\t\t\tstate.pagination.sortBy = props.sortBy;\r\n\t\t}\r\n\t\telse if (route.query.sortby) {\r\n\t\t\tstate.pagination.sortBy = route.query.sortby;\r\n\t\t}\r\n\r\n\t\tif (props.sortType) {\r\n\t\t\tstate.pagination.descending = props.sortType.toLowerCase() == 'desc';\r\n\t\t}\r\n\t\telse if (route.query.sorttype) {\r\n\t\t\tstate.pagination.descending = (route.query.sorttype.toLowerCase() == 'desc');\r\n\t\t}\r\n\r\n\t\tconst query = {};\r\n\t\tquery.page = state.pagination.page;\r\n\t\tquery.limit = state.pagination.limit;\r\n\t\t\r\n\t\tif(state.pagination.sortBy){\r\n\t\t\tlet orderType = state.pagination.descending ? 'desc' : 'asc';\r\n\t\t\tquery.orderby = state.pagination.sortBy;\r\n\t\t\tquery.ordertype = orderType;\r\n\t\t}\r\n\t\t\r\n\t\tif (state.searchText) {\r\n\t\t\tquery.search = state.searchText;\r\n\t\t}\r\n\r\n\t\tfor (const [key, filter] of Object.entries(filters)) {\r\n\t\t\tif(filterHasValue(filter)){\r\n\t\t\t\tif(filter.valueType == 'range'){\r\n\t\t\t\t\tquery[key] = { min: filter.value[0], max: filter.value[1] };\r\n\t\t\t\t}\r\n\t\t\t\telse if(filter.valueType == 'range-date'){\r\n\t\t\t\t\tlet fromDate = utils.formatDate(filter.value[0]);\r\n\t\t\t\t\tlet toDate = utils.formatDate(filter.value[1]);\r\n\t\t\t\t\tquery[key] = { from: fromDate, to: toDate };\r\n\t\t\t\t}\r\n\t\t\t\telse if(filter.valueType == 'multiple-date'){\r\n\t\t\t\t\tquery[key] = filter.value.map((val) => utils.formatDate(val));\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tquery[key] = filter.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst queryParams = utils.serializeQuery(query);\r\n\t\tif(path.includes('?')){\r\n            return `${path}&${queryParams}`;\r\n        }\r\n\t\treturn `${path}?${queryParams}`;\r\n\t});\r\n\r\n\tconst recordsPosition = computed(() => {\r\n\t\tconst position = Math.min(state.pagination.page * state.pagination.limit, state.totalRecords) - 1;\r\n\t\treturn Math.abs(position);\r\n\t});\r\n\r\n\tconst totalPages = computed (() => {\r\n\t\tif (state.totalRecords > state.pagination.limit) {\r\n\t\t\treturn Math.ceil(state.totalRecords / state.pagination.limit);\r\n\t\t}\r\n\t\treturn 1;\r\n\t});\r\n\r\n\tconst finishedLoading = computed(() => {\r\n\t\tif (records.value.length > state.pagination.limit && records.value.length >= state.totalRecords) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t});\r\n\r\n\tconst canLoadMore = computed(() => {\r\n\t\tif (state.loading || finishedLoading.value) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t});\r\n\r\n\tconst pageBreadCrumb = computed(() => {\r\n\t\tlet items = [];\r\n\t\tlet filterName = route.query.tag || props.fieldName;\r\n\t\titems.push({\r\n\t\t\tlabel: filterName,\r\n\t\t\tto: `/${props.pageName}`\r\n\t\t});\r\n\r\n\t\tlet filterValue = route.query.label || props.fieldValue;\r\n\t\titems.push({\r\n\t\t\tlabel: filterValue,\r\n\t\t\tto: `/${props.pageName}`\r\n\t\t});\r\n\t\treturn items;\r\n\t});\r\n\t\r\n\tfunction resetPagination(){\r\n\t\trecords.value = [];\r\n\t\tstate.recordCount = 0;\r\n\t\tstate.pagination.page = 1;\r\n\t}\r\n\r\n\tfunction onSort(event) {\r\n\t\tif(props.mergeRecords){\r\n\t\t\tresetPagination();\r\n\t\t}\r\n\t\tstate.pagination.sortBy = event.sortField;\r\n\t\tstate.pagination.descending = event.sortOrder==-1;\r\n\t}\r\n\r\n\tfunction loadNextPage() {\r\n\t\tstate.pagination.page++; //will trigger load function\r\n\t}\r\n\r\n\tfunction loadPreviousPage() {\r\n\t\tif(state.pagination.page > 0){\r\n\t\t\tstate.pagination.page--; //will trigger load function\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollToTop(){\r\n\t\t// display starting from first record\r\n\t\t// if not infinite load,\r\n\t\tif(props.routeName === route.name && !props.mergeRecords){ \r\n\t\t\twindow.scrollTo({top: 0, behavior: \"smooth\"});\r\n\t\t}\r\n\t}\r\n\r\n\tasync function load() {\r\n\t\tif (!canLoadMore.value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tscrollToTop();\r\n\t\tstate.pageReady = false;\r\n\t\tstate.loading = true;\r\n\t\tcurrentRecord.value = null;\r\n\t\t\r\n\t\tconst url = apiUrl.value;\r\n\t\tconst payload = {\r\n\t\t\turl,\r\n\t\t\tmerge: props.mergeRecords\r\n\t\t}\r\n\t\ttry{\r\n\t\t\t//the store will load the page data and set current records\r\n\t\t\tconst response = await store.dispatch(`${props.pageName}/fetchRecords`, payload);\r\n\r\n\t\t\t//update pagination state with new response data\r\n\t\t\tstate.totalRecords = response.total_records;\r\n\t\t\tstate.recordCount = response.record_count;\r\n\t\t\tstate.pagination.rowsNumber = state.totalRecords;\r\n\r\n\t\t\t// when page data is loaded\r\n\t\t\t//notify other dependent components\r\n\t\t\tstate.pageReady = true;\r\n\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(err){\r\n\t\t\tapp.showPageRequestError(err);\r\n\t\t}\r\n\t\tfinally{\r\n\t\t\tstate.loading = false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction reload() {\r\n\t\tstate.searchText = route.query.search || null;\r\n\t\tresetPagination();\r\n\t}\r\n\r\n\tfunction setCurrentRecord(record) {\r\n\t\tstate.selectedItems=[record];\r\n\t\tstore.commit(`${props.pageName}/setCurrentRecord`, record);\r\n\t}\r\n\r\n\tfunction isCurrentRecord(row) {\r\n\t\treturn row == currentRecord.value;\r\n\t}\r\n\r\n\tfunction importComplete(message) {\r\n\t\tapp.flashMsg(message);\r\n\t\treload();\r\n\t}\r\n\r\n\tfunction exportPage() {\r\n\t\tapp.exportPageRecords(props.exportFormats, apiUrl.value, props.pageName);\r\n\t}\r\n\r\n\tasync function deleteItem(id) {\r\n\t\tif (Array.isArray(id)) {\r\n\t\t\tid = id.map(value => value[props.primaryKey]);\r\n\t\t}\r\n\r\n\t\tif (id) {\r\n\t\t\tconst title = props.titleBeforeDelete;\r\n\t\t\tconst prompt = props.msgBeforeDelete;\r\n\t\t\tconfirm.require({\r\n\t\t\t\tmessage: prompt,\r\n\t\t\t\theader: title,\r\n\t\t\t\ticon: 'pi pi-exclamation-triangle',\r\n\t\t\t\taccept: async () => {\r\n\t\t\t\t\t//callback to execute when user confirms the action\r\n\t\t\t\t\tlet url =`${props.pageName}/delete/${id.toString()}`;\r\n\t\t\t\t\tlet payload = { id, url };\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tawait store.dispatch(`${props.pageName}/deleteRecord`, payload);\r\n\t\t\t\t\t\tapp.flashMsg(props.msgAfterDelete);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(err){\r\n\t\t\t\t\t\tapp.showPageRequestError(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\treject: () => {\r\n\t\t\t\t\t//callback to execute when user rejects the action\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeFilter(filter, selectedVal){\r\n\t\tlet valueType = filter.valueType;\r\n\t\tif(valueType=='single'){\r\n\t\t\tfilter.value = null;\r\n\t\t}\r\n\t\telse if(valueType == 'range' || valueType == 'range-date'){\r\n\t\t\tfilter.value = [];\r\n\t\t}\r\n\t\telse if(valueType == 'multiple' || valueType == 'multiple-date'){\r\n\t\t\tlet idx = filter.value.indexOf(selectedVal);\r\n\t\t\tfilter.value.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction filterHasValue(filter){\r\n\t\tif(filter.valueType == 'range'){\r\n\t\t\treturn filter.value.length>0;\r\n\t\t}\r\n\t\telse if(filter.valueType == 'range-date'){\r\n\t\t\tconst toDate = filter.value[1] || null; \r\n\t\t\tif(toDate) return true;//if second date is selected\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse if(Array.isArray(filter.value)){\r\n\t\t\treturn filter.value.length>0;\r\n\t\t}\r\n\t\telse if(filter.value){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tfunction getFilterLabel(filter, selectedVal){\r\n\t\tif(filter.valueType == 'range' && filter.value.length){\r\n\t\t\tlet min = filter.value[0];\r\n\t\t\tlet max = filter.value[1];\r\n\t\t\treturn `${min} - ${max}`;\r\n\t\t}\r\n\t\telse if(filter.valueType == 'range-date' && filter.value.length){\r\n\t\t\tlet minDate = utils.humanDate(filter.value[0]);\r\n\t\t\tlet maxDate = utils.humanDate(filter.value[1]);\r\n\t\t\treturn `${minDate} - ${maxDate}`;\r\n\t\t}\r\n\t\telse if(filter.valueType == 'multiple-date'){\r\n\t\t\tlet val = selectedVal || filter.value;\r\n\t\t\treturn utils.humanDate(val);\r\n\t\t}\r\n\t\telse if(filter.valueType == 'single-date'){\r\n\t\t\treturn utils.humanDate(filter.value);\r\n\t\t}\r\n\t\telse if(filter.options.length){\r\n\t\t\tlet val = selectedVal || filter.value;\r\n\t\t\tlet selectedFilter = filter.options.find(obj => obj.value == val);\r\n\t\t\tif(selectedFilter){\r\n\t\t\t\treturn selectedFilter.label;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(selectedVal){\r\n\t\t\treturn selectedVal.toString();\r\n\t\t}\r\n\t\treturn filter.value.toString();\r\n\t}\r\n\t\r\n\tfunction clearSearch() {\r\n\t\tstate.searchText = '';\r\n\t\troute.query.search = '';\r\n\t}\r\n\r\n\tonMounted(()=>{ \r\n\t\tif(route.query.search){\r\n\t\t\tstate.searchText = route.query.search;\r\n\t\t}\r\n\t});\r\n\r\n\twatchEffect(() => {\r\n\t\tif ((props.fieldName && props.fieldValue) || state.searchText) {\r\n\t\t\tresetPagination();\r\n\t\t}\r\n\t});\r\n\r\n\twatch(apiUrl, () => load());\r\n\r\n\tconst computedProps = {\r\n\t\trecords,\r\n\t\tapiUrl,\r\n\t\tcurrentRecord,\r\n\t\tpageBreadCrumb,\r\n\t\tcanLoadMore,\r\n\t\tfinishedLoading,\r\n\t\ttotalPages,\r\n\t\trecordsPosition\r\n\t}\r\n\r\n\tconst methods = {\r\n\t\tload,\r\n\t\treload,\r\n\t\tloadNextPage,\r\n\t\tloadPreviousPage,\r\n\t\tresetPagination,\r\n\t\texportPage,\r\n\t\tclearSearch,\r\n\t\tdebounce: utils.debounce(),\r\n\t\tonSort,\r\n\t\tdeleteItem,\r\n\t\tsetCurrentRecord,\r\n\t\tisCurrentRecord,\r\n\t\tremoveFilter,\r\n\t\tgetFilterLabel,\r\n\t\tfilterHasValue,\r\n\t\timportComplete\r\n\t}\r\n\t\r\n\treturn {\r\n\t\tstate,\r\n\t\tcomputedProps,\r\n\t\tmethods,\r\n\t}\r\n\r\n}","<template>\r\n    <div class=\"main-page\">\r\n        <template v-if=\"showHeader\">\r\n            <section class=\"page-section mb-3\" >\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"grid justify-content-between\">\r\n                        <div class=\"col \" >\r\n                            <div class=\"\">\r\n                                <div class=\" text-2xl text-primary font-bold\" >\r\n                                    Datosprueba\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 md:col-3 lg:col-2 \" >\r\n                            <div class=\"\">\r\n                                <Button label=\"Agregar nuevo\" icon=\"pi pi-plus\"  @click=\"app.openPageDialog({ page: 'datosprueba/add', url: `/datosprueba/add` , closeBtn: true })\"  class=\"w-full bg-primary \"  />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 md:col-5 lg:col-4 \" >\r\n                            <div class=\"\">\r\n                                <span class=\"p-input-icon-left w-full\">\r\n                                <i class=\"pi pi-search\" />\r\n                                <InputText outlined dense  placeholder=\"Buscar\" class=\"w-full\" :value=\"searchText\" @input=\"debounce(() => { searchText = $event.target.value })\"  />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </template>\r\n        <section class=\"page-section \" >\r\n            <div class=\"container-fluid\">\r\n                <div class=\"grid \">\r\n                    <div class=\"col comp-grid\" >\r\n                        <div class=\"\">\r\n                            <div class=\"flex align-items-center justify-content-around\">\r\n                                <div v-if=\"searchText\" :class=\"filterTagClass\">\r\n                                    Buscar\r\n                                    <Chip class=\"font-medium px-2 py-1\" removable @remove=\"clearSearch()\">{{ searchText }}</Chip>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"\">\r\n                                <div >\r\n                                    <template v-if=\"showBreadcrumbs && $route.query.tag\">\r\n                                        <Breadcrumb :home=\"{icon: 'pi pi-home', to: '/datosprueba'}\" :model=\"pageBreadCrumb\" />\r\n                                    </template>\r\n                                    <div class=\"grid justify-content-start\">\r\n                                        <!-- Master Page Start -->\r\n                                        <div class=\"col-12\">\r\n                                            <div class=\"\" :class=\"{ 'card': !isSubPage }\">\r\n                                                <!-- page records template -->\r\n                                                <div class=\"page-records\" >\r\n                                                    <DataTable :lazy=\"true\" :loading=\"loading\"    v-model:selection=\"selectedItems\"\r\n                                                         :value=\"records\" dataKey=\"id\" @sort=\"onSort($event)\" class=\"\" :showGridlines=\"false\" :rowHover=\"true\" responsiveLayout=\"stack\">\r\n                                                        <Column selectionMode=\"multiple\" headerStyle=\"width: 3em\"></Column>\r\n                                                        <Column  field=\"id\" header=\"Id\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                <router-link :to=\"`/datosprueba/view/${data.id}`\">\r\n                                                                    {{ data.id }}\r\n                                                                </router-link>\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"categoria\" header=\"Categoria\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.categoria }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"ciudad\" header=\"Ciudad\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.ciudad }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"estado\" header=\"Estado\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.estado }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"fabricante\" header=\"Fabricante\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.fabricante }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"fecha_envio\" header=\"Fecha Envio\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.fecha_envio }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"fecha_pedido\" header=\"Fecha Pedido\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.fecha_pedido }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"forma_envio\" header=\"Forma Envio\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.forma_envio }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"id_pedido\" header=\"Id Pedido\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.id_pedido }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"cliente\" header=\"Cliente\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.cliente }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"producto\" header=\"Producto\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.producto }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"paisregion\" header=\"Paisregion\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.paisregion }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"region\" header=\"Region\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.region }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"segmento\" header=\"Segmento\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.segmento }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"subcategoria\" header=\"Subcategoria\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.subcategoria }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"cantidad\" header=\"Cantidad\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.cantidad }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"descuento\" header=\"Descuento\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.descuento }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"ganancia\" header=\"Ganancia\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.ganancia }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"numero_registros\" header=\"Numero Registros\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.numero_registros }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"relacion_ganancias\" header=\"Relacion Ganancias\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.relacion_ganancias }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  field=\"total\" header=\"Total\" >\r\n                                                            <template #body=\"{data}\">\r\n                                                                {{ data.total }}\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                        <Column  headerStyle=\"width: 3em\" headerClass=\"text-center\">\r\n                                                            <template #body=\"{data}\">\r\n                                                                <SplitButton class=\"p-button p-button-raised p-button-text p-button-sm\" :model=\"getActionMenuModel(data)\">\r\n                                                                    <i></i>\r\n                                                                </SplitButton>\r\n                                                            </template>\r\n                                                        </Column>\r\n                                                    </DataTable>\r\n                                                </div>\r\n                                                <!-- page loading indicator -->\r\n                                                <template v-if=\"loading\">\r\n                                                    <div class=\"flex align-items-center justify-content-center text-gray-500 p-3\">\r\n                                                        <div><ProgressSpinner style=\"width:30px;height:30px;\" /> </div>\r\n                                                        <div>Cargando...</div>\r\n                                                    </div>\r\n                                                </template>\r\n                                                <!-- end of page loading indicator-->\r\n                                                <!-- Empty record -->\r\n                                                <template v-if=\"pageReady && !records.length\">\r\n                                                    <div class=\"p-3 my-3 text-500 text-lg font-medium text-center\">\r\n                                                        ningún record fue encontrado\r\n                                                    </div>\r\n                                                </template>\r\n                                                <!-- end of empty record-->\r\n                                                <!-- pagination component-->\r\n                                                <template v-if=\"showFooter\">\r\n                                                    <div class=\"\">\r\n                                                        <div v-show=\"pageReady\">\r\n                                                            <div class=\"flex justify-content-between\">\r\n                                                                <div class=\"flex justify-content-center flex-grow-0\">\r\n                                                                    <div v-if=\"selectedItems.length\" class=\"m-2\">\r\n                                                                        <Button @click=\"deleteItem(selectedItems)\" icon=\"pi pi-trash\" class=\"p-button-danger\" title=\"Eliminar seleccionado\" />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div v-if=\"paginate && totalPages > 1\" class=\"flex-grow-1\">\r\n                                                                    <Paginator class=\"border-none bg-transparent py-3\" :first=\"recordsPosition\" @page=\"(event)=>{pagination.page = event.page + 1}\" :rows=\"pagination.limit\" :totalRecords=\"totalRecords\">\r\n                                                                        <template #start>\r\n                                                                            <span class=\"text-sm text-gray-500 px-2\">\r\n                                                                            Archivos <b>{{ recordsPosition }} de {{ totalRecords }}</b>\r\n                                                                            </span>\r\n                                                                        </template>\r\n                                                                        <template #end>\r\n                                                                        </template>\r\n                                                                    </Paginator>\r\n                                                                </div>\r\n                                                            </div>  \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </template>\r\n                                                <!-- end of pagination component-->\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\timport {   reactive, toRefs, onMounted } from 'vue';\r\n\timport { useApp } from '@/composables/app.js';\r\n\timport { useListPage } from '@/composables/listpage.js';\r\n\tconst props = defineProps({\r\n\t\tprimaryKey : {\r\n\t\t\ttype : String,\r\n\t\t\tdefault : 'id',\r\n\t\t},\r\n\t\tpageName : {\r\n\t\t\ttype : String,\r\n\t\t\tdefault : 'datosprueba',\r\n\t\t},\r\n\t\trouteName : {\r\n\t\t\ttype : String,\r\n\t\t\tdefault : 'datospruebalist',\r\n\t\t},\r\n\t\tapiPath : {\r\n\t\t\ttype : String,\r\n\t\t\tdefault : 'datosprueba/index',\r\n\t\t},\r\n\t\tpaginate: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\tshowHeader: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\tshowFooter: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\tshowBreadcrumbs: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\texportButton: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\timportButton: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false,\r\n\t\t},\r\n\t\tmultiCheckbox: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\temptyRecordMsg: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"ningún record fue encontrado\",\r\n\t\t},\r\n\t\ttitleBeforeDelete: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"Eliminar el registro\",\r\n\t\t},\r\n\t\tmsgBeforeDelete: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"¿Seguro que quieres borrar este registro?\",\r\n\t\t},\r\n\t\tmsgAfterDelete: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"Grabar eliminado con éxito\",\r\n\t\t},\r\n\t\tpage: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 1,\r\n\t\t},\r\n\t\tlimit: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 10,\r\n\t\t},\r\n\t\tmergeRecords: { // for infinite loading\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false,\r\n\t\t},\r\n\t\tsearch: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: '',\r\n\t\t},\r\n\t\tfieldName: null,\r\n\t\tfieldValue: null,\r\n\t\tsortBy: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: '',\r\n\t\t},\r\n\t\tsortType: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: '', //desc or asc\r\n\t\t},\r\n\t\tisSubPage: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false,\r\n\t\t},\r\n\t\tfilterTagClass: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'surface-card p-2 text-500 flex-grow-1 text-center m-1 mb-3 flex-grow-1 text-center',\r\n\t\t}\r\n\t});\r\n\tconst app = useApp();\r\n\tconst filters = reactive({\r\n\t});\r\n\t//init list page hook\r\n\tconst page = useListPage(props, filters);\r\n\t//page state\r\n\tconst { \r\n\t\ttotalRecords, // total records from api - Number\r\n\t\trecordCount, // current record count - Number\r\n\t\tloading, // Api loading state - Boolean\r\n\t\tselectedItems, // Data table selected items -Array\r\n\t\tpagination, //Pagination object - Object\r\n\t\tsearchText, // search text - String\r\n\t\tpageReady, // api data loaded successfully\r\n\t} = toRefs(page.state);\r\n\t//page computed propties\r\n\tconst { \r\n\t\trecords, // page record from store - Array\r\n\t\tapiUrl, // current api path - URL\r\n\t\tcurrentRecord, // master detail selected record - Object\r\n\t\tpageBreadCrumb, // get page navigation paths - Object\r\n\t\tcanLoadMore, // if api has more data for loading - Boolean\r\n\t\tfinishedLoading, // if api has finished loading - Boolean\r\n\t\ttotalPages, // total number of pages from api - Number\r\n\t\trecordsPosition // current record position from api - Number\r\n\t} = page.computedProps\r\n\t//page methods\r\n\tconst {\r\n\t\tload, // load data from api\r\n\t\treload, // reset pagination and load data\r\n\t\tloadNextPage, // load next page\r\n\t\tloadPreviousPage, // load previous page\r\n\t\texportPage, // export page records - args = (exportFormats, apiUrl, pageName)\r\n\t\tclearSearch, // clear input search\r\n\t\tdebounce, // debounce input search\r\n\t\tonSort, // reset page number before sort from api\r\n\t\tdeleteItem, // delete item by id or selected items - args = (id) or (selectedItems)\r\n\t\tsetCurrentRecord, // master detail set current record\r\n\t\tisCurrentRecord, // master detail \r\n\t\tremoveFilter, // remove page filter item - args = (filter.propertyname)\r\n\t\tgetFilterLabel, // get filter item display label - args = (filter.propertyname)\r\n\t\tfilterHasValue, //check if filter item has value - args = (filter.propertyname)\r\n\t\timportComplete // reload page after data import\r\n\t} = page.methods\r\n\tfunction getActionMenuModel(data){\r\n\t\treturn [\r\n\t\t{\r\n\t\t\tlabel: \"View\",\r\n\t\t\tto: `/datosprueba/view/${data.id}`,\r\n\t\t\ticon: \"pi pi-eye\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Edit\",\r\n\t\t\tcommand: (event) => { app.openPageDialog({ page:'datosprueba/edit', url: `/datosprueba/edit/${data.id}` , closeBtn: true }) },\r\n\t\t\ticon: \"pi pi-pencil\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Delete\",\r\n\t\t\tcommand: (event) => { deleteItem(data.id) },\r\n\t\t\ticon: \"pi pi-minus-circle\"\r\n\t\t}\r\n\t]\r\n\t}\r\n\tonMounted(()=>{ \r\n\t\tconst pageTitle = \"Datosprueba\";\r\n\t\tapp.setPageTitle(props.routeName, pageTitle);\r\n\t\tload();\r\n\t});\r\n</script>\r\n<style scoped>\r\n</style>\r\n","import script from \"./list.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./list.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n"],"sourceRoot":""}